#include "touch.h"

Touch* Touch::instance = nullptr;

Touch::Touch()
    : touchSPI(TOUCH_SPI)
    , ts(TOUCH_CS, TOUCH_IRQ)
    , touchX(0)
    , touchY(0)
    , touched(false)
    , lastTouchTime(0)
{
    touchSPI.begin(TOUCH_CLK, TOUCH_MISO, TOUCH_MOSI, TOUCH_CS);
    ts.begin(touchSPI);
    ts.setRotation(1);
}

Touch& Touch::getInstance() {
    if (!instance) {
        instance = new Touch();
    }
    return *instance;
}

void Touch::begin() {
    // 开始时就已经在构造函数中初始化了
}

void Touch::update() {
    // 检查是否需要防抖
    if (millis() - lastTouchTime < TOUCH_DEBOUNCE_MS) {
        touched = false;
        return;
    }

    if (ts.touched()) {
        TS_Point p = ts.getPoint();
        
        // 映射触摸坐标到屏幕坐标
        touchX = mapTouchX(p.x);
        touchY = mapTouchY(p.y);
        touched = true;
        lastTouchTime = millis();
    } else {
        touched = false;
    }
}

uint16_t Touch::mapTouchX(int rawX) {
    // 使用map函数进行坐标映射
    return map(rawX, TOUCH_MIN_X, TOUCH_MAX_X, 0, SCREEN_WIDTH);
}

uint16_t Touch::mapTouchY(int rawY) {
    // 使用map函数进行坐标映射
    return map(rawY, TOUCH_MIN_Y, TOUCH_MAX_Y, 0, SCREEN_HEIGHT);
}

bool Touch::isInArea(uint16_t x, uint16_t y, uint16_t w, uint16_t h) const {
    if (!touched) return false;
    
    return (touchX >= x && touchX <= x + w &&
            touchY >= y && touchY <= y + h);
}
